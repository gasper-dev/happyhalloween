---
import Layout from "../layouts/Layout.astro";
import { getCldImageUrl } from "astro-cloudinary/helpers";
import Button from "../components/Button.astro";
import CopyButton from "../components/CopyButton.astro";
const { searchParams } = Astro.url;
const id = searchParams.get("id");
if (!id) return Astro.redirect("/");

const url = await getCldImageUrl({
  src: id,
  removeBackground: true,
  flags: "relative",
  width: "500",
  height: "500",
  crop: "fill",
  gravity: "auto",
  aspectRatio: 0.5,
  preserveTransformations: true,
});
---

<Layout title="Ghosts Alert Image">
  <section
    class="relative min-h-[450px] max-w-7xl mx-auto h-screen items-center"
  >
    <div
      class="relative h-[500px] lg:h-[750px] md:h-[610px] pt-5 grid justify-items-center overflow-hidden mx-auto"
    >
      <img
        src="/home-point.png"
        alt="img"
        class="points absolute inset-0 mx-auto max-w-full h-auto object-cover"
      />
      <img
        id="myImage"
        src="/frames/hp1.svg"
        alt="img"
        class="moon absolute mx-auto max-w-full md:h-[450px] h-[450px] bottom-[8rem] md:bottom-[15rem] lg:h-[750px] lg:bottom-[8rem] object-cover"
      />
      <img
        src="/p1.png"
        alt="img"
        class="house absolute mx-auto max-w-full h-[250px] bottom-[8rem] md:bottom-[5rem] md:h-[350px] lg:h-[350px] lg:bottom-[12rem] object-cover"
      />
      <img
        src="/mountainForest.svg"
        alt="img"
        class="mountainForest block absolute mx-auto object-cover h-[580px] bottom-[0rem] md:h-[550px] lg:h-[850px] md:bottom-[0rem] lg:bottom-[0rem]"
      />
      <img
        src="/eyeColor.svg"
        alt="img"
        class="eyeColor absolute mx-auto max-w-full h-[580px] bottom-[0rem] md:bottom-[0rem] lg:bottom-[2rem] md:h-[550px] object-cover"
      />
    </div>

    <div
      class="w-full flex gap-2 flex-col items-center justify-center text-center"
    >
      <Button id="nextBtn" title="Next title" />
      <CopyButton id="copyUrlBtn" title="Copy Share" />
    </div>
  </section>
</Layout>

<script>
  const myImage = document.getElementById("myImage") as HTMLImageElement;
  const nextBtn = document.getElementById("nextBtn") as HTMLImageElement;
  const copyUrlBtn = document.getElementById("copyUrlBtn") as HTMLImageElement;
  const tooltip = document.getElementById("tooltip") as HTMLImageElement;

  const happyHalloweenText = [];
  for (let i = 1; i <= 3; i++) {
    happyHalloweenText.push(`frames/hp${i}.svg`);
  }

  let index = 1;

  nextBtn.addEventListener("click", () => {
    index = (index + 1) % happyHalloweenText.length;
    myImage.src = `frames/hp${index + 1}.svg`;
  });

  copyUrlBtn.addEventListener("click", () => {
    const { searchParams } = new URL(window.location.href);
    const id = searchParams.get("id");
    if (id) {
      const urlToCopy = `https://happyhalloween-tau.vercel.app/happy?id=${id}&text=${index}`;
      navigator.clipboard
        .writeText(urlToCopy)
        .then(() => {
          showTooltip();
        })
        .catch((err) => {
          console.error("Error al copiar: ", err);
        });
    }
  });
  function showTooltip() {
    // Cambiar los atributos tooltip y aria
    tooltip.setAttribute("data-visible", "true");
    tooltip.setAttribute("aria-hidden", "false");

    // Hide the tooltip after 2 seconds
    setTimeout(() => {
      tooltip.setAttribute("data-visible", "false");
      tooltip.setAttribute("aria-hidden", "true");
    }, 2000);
  }
</script>
